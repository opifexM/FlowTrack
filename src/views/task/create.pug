extends ../layout/page.pug

block head
  title= __('task-create.title')

block content
  .container.wrapper.flex-grow-1
    h1.display-4.fw-bold.mt-4= __('task-create.title')
    form(action="/tasks", method="post", autocomplete="off")

      .form-floating.mb-3
        input.form-control(
          id="data_name"
          name="data[name]"
          type="text"
          placeholder=__('task-create.name')
          value=form.name
          minlength=TASK_VALIDATION.NAME.MIN
          maxlength=TASK_VALIDATION.NAME.MAX
          class={'is-invalid': fieldErrors.name}
        )
        label(for="data_name")= __('task-create.name')
        if fieldErrors.name
          .invalid-feedback= fieldErrors.name

      .mb-3
        label(for="data_description")= __('task-create.description')
        textarea.form-control(
          id="data_description"
          name="data[description]"
          rows="3"
          placeholder=__('task-create.description')
          minlength=TASK_VALIDATION.DESCRIPTION.MIN
          maxlength=TASK_VALIDATION.DESCRIPTION.MAX
          class={'is-invalid': fieldErrors.description}
        )= form.description || ''
        if fieldErrors.description
          .invalid-feedback= fieldErrors.description

      .mb-3
        label(for="data_statusId")= __('task-create.status')
        select.form-control(
          id="data_statusId",
          name="data[statusId]"
          class={'is-invalid': fieldErrors.statusId}
        )
          option
          each status in statuses
            option(value=status.id, selected=form.statusId === status.id)= status.name
        if fieldErrors.statusId
          .invalid-feedback= fieldErrors.statusId

      .mb-3
        label(for="data_executorId")= __('task-create.executor')
        select.form-control(
          id="data_executorId",
          name="data[executorId]"
          class={'is-invalid': fieldErrors.executorId}
        )
          option
          each user in users
            option(value=user.id, selected=form.executorId === user.id)= `${user.firstName} ${user.lastName}`
        if fieldErrors.executorId
          .invalid-feedback= fieldErrors.executorId

      .mb-3
        label(for="data_labels")= __('task-create.labels')
        select.form-control(
          id="data_labels",
          name="data[labels]",
          multiple="multiple"
          class={'is-invalid': fieldErrors.labels}
        )
          each label in labels
            option(value=label.id, selected=form.labels && form.labels.includes(label.id.toString()))= label.name
        if fieldErrors.labels
          .invalid-feedback= fieldErrors.labels

      input.btn.btn-primary(type="submit", value=__('task-create.submit'))
